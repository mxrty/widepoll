[{"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\index.js":"1","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\App.js":"2","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\index.js":"3","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\history.js":"4","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\AdminPanel.js":"5","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\Showcase.js":"6","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostShow.js":"7","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostFeed.js":"8","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\RecentPosts.js":"9","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostCreate.js":"10","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\Login.js":"11","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\Register.js":"12","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainCreate.js":"13","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\postReducer.js":"14","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\types.js":"15","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\index.js":"16","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\apis\\api.js":"17","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\domainReducer.js":"18","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainEdit.js":"19","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\authReducer.js":"20","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\Header.js":"21","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\Footer.js":"22","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\SideMenu.js":"23","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Home.js":"24","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainHome.js":"25","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainBlurb.js":"26","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Settings.js":"27","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Search.js":"28","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollCreate.js":"29","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\Comment.js":"30","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostComments.js":"31","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\CommentCreate.js":"32","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\authActions.js":"33","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\commentActions.js":"34","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\domainActions.js":"35","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\solutionActions.js":"36","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\postActions.js":"37","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\commentReducer.js":"38","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\solutionReducer.js":"39","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionList.js":"40","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionListItem.js":"41","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionCreate.js":"42","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostFeedItem.js":"43","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\pollActions.js":"44","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollShow.js":"45","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\pollReducer.js":"46","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollResults.js":"47","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile.js":"48","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\userReducer.js":"49","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\SentimentEditor.js":"50","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainList.js":"51","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\sentimentReducer.js":"52","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\RepCard.js":"53","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\ProfileFeed.js":"54","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\ProfileBio.js":"55","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\Following.js":"56","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\PendingVotes.js":"57","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\RecentActivity.js":"58","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\voteActions.js":"59","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\pendingVotesReducer.js":"60","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\DomainRepresentedItem.js":"61","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\PendingVoteItem.js":"62"},{"size":1110,"mtime":1613241754927,"results":"63","hashOfConfig":"64"},{"size":3522,"mtime":1615990545618,"results":"65","hashOfConfig":"64"},{"size":754,"mtime":1617969071397,"results":"66","hashOfConfig":"64"},{"size":89,"mtime":1609618592838,"results":"67","hashOfConfig":"64"},{"size":1791,"mtime":1609618592832,"results":"68","hashOfConfig":"64"},{"size":119,"mtime":1609618592833,"results":"69","hashOfConfig":"64"},{"size":1771,"mtime":1614980806127,"results":"70","hashOfConfig":"64"},{"size":2421,"mtime":1616347038302,"results":"71","hashOfConfig":"64"},{"size":1123,"mtime":1616347392858,"results":"72","hashOfConfig":"64"},{"size":2686,"mtime":1617906064388,"results":"73","hashOfConfig":"64"},{"size":2306,"mtime":1615832281663,"results":"74","hashOfConfig":"64"},{"size":3465,"mtime":1615839031330,"results":"75","hashOfConfig":"64"},{"size":2439,"mtime":1615141469111,"results":"76","hashOfConfig":"64"},{"size":1091,"mtime":1615078315321,"results":"77","hashOfConfig":"64"},{"size":1572,"mtime":1618058278087,"results":"78","hashOfConfig":"64"},{"size":233,"mtime":1617968661406,"results":"79","hashOfConfig":"64"},{"size":98,"mtime":1609618592831,"results":"80","hashOfConfig":"64"},{"size":843,"mtime":1615418574856,"results":"81","hashOfConfig":"64"},{"size":2824,"mtime":1611718845670,"results":"82","hashOfConfig":"64"},{"size":1341,"mtime":1616359662252,"results":"83","hashOfConfig":"64"},{"size":1996,"mtime":1615288586801,"results":"84","hashOfConfig":"64"},{"size":382,"mtime":1615989865317,"results":"85","hashOfConfig":"64"},{"size":653,"mtime":1617907260537,"results":"86","hashOfConfig":"64"},{"size":866,"mtime":1613166768659,"results":"87","hashOfConfig":"64"},{"size":1610,"mtime":1616359443507,"results":"88","hashOfConfig":"64"},{"size":348,"mtime":1616347045183,"results":"89","hashOfConfig":"64"},{"size":807,"mtime":1616344232160,"results":"90","hashOfConfig":"64"},{"size":193,"mtime":1612917892405,"results":"91","hashOfConfig":"64"},{"size":4558,"mtime":1615210190795,"results":"92","hashOfConfig":"64"},{"size":7867,"mtime":1617899728327,"results":"93","hashOfConfig":"64"},{"size":2092,"mtime":1617632383666,"results":"94","hashOfConfig":"64"},{"size":1811,"mtime":1617629170303,"results":"95","hashOfConfig":"64"},{"size":2212,"mtime":1618061048536,"results":"96","hashOfConfig":"64"},{"size":2400,"mtime":1617899669472,"results":"97","hashOfConfig":"64"},{"size":1544,"mtime":1616346048366,"results":"98","hashOfConfig":"64"},{"size":2146,"mtime":1618013147604,"results":"99","hashOfConfig":"64"},{"size":2571,"mtime":1615325296331,"results":"100","hashOfConfig":"64"},{"size":1795,"mtime":1617136636134,"results":"101","hashOfConfig":"64"},{"size":1367,"mtime":1618013136872,"results":"102","hashOfConfig":"64"},{"size":1522,"mtime":1617993085779,"results":"103","hashOfConfig":"64"},{"size":1601,"mtime":1615058463129,"results":"104","hashOfConfig":"64"},{"size":2113,"mtime":1614980720627,"results":"105","hashOfConfig":"64"},{"size":1615,"mtime":1616347269091,"results":"106","hashOfConfig":"64"},{"size":1116,"mtime":1615231345833,"results":"107","hashOfConfig":"64"},{"size":1509,"mtime":1615229658024,"results":"108","hashOfConfig":"64"},{"size":441,"mtime":1615216678281,"results":"109","hashOfConfig":"64"},{"size":1703,"mtime":1615234460348,"results":"110","hashOfConfig":"64"},{"size":646,"mtime":1618054554815,"results":"111","hashOfConfig":"64"},{"size":588,"mtime":1618061136611,"results":"112","hashOfConfig":"64"},{"size":4928,"mtime":1617494068511,"results":"113","hashOfConfig":"64"},{"size":900,"mtime":1616357420142,"results":"114","hashOfConfig":"64"},{"size":1185,"mtime":1617993198979,"results":"115","hashOfConfig":"64"},{"size":1598,"mtime":1618054055325,"results":"116","hashOfConfig":"64"},{"size":1056,"mtime":1618085637677,"results":"117","hashOfConfig":"64"},{"size":1690,"mtime":1618055240788,"results":"118","hashOfConfig":"64"},{"size":6736,"mtime":1618061191792,"results":"119","hashOfConfig":"64"},{"size":793,"mtime":1618059349328,"results":"120","hashOfConfig":"64"},{"size":1733,"mtime":1618088012039,"results":"121","hashOfConfig":"64"},{"size":895,"mtime":1618059490213,"results":"122","hashOfConfig":"64"},{"size":661,"mtime":1618058666353,"results":"123","hashOfConfig":"64"},{"size":1622,"mtime":1617979889584,"results":"124","hashOfConfig":"64"},{"size":2780,"mtime":1618060701667,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"fh74tl",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\index.js",[],["263","264"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\App.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\index.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\history.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\AdminPanel.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\Showcase.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostShow.js",["265"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Row, Col } from \"antd\";\r\n\r\nimport { fetchPost } from \"../../actions\";\r\nimport PostComments from \"./PostComments\";\r\nimport SolutionList from \"../solutions/SolutionList\";\r\nimport DomainBlurb from \"../domains/DomainBlurb\";\r\n\r\nconst PostShow = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPost(props.match.params.postId);\r\n  }, []);\r\n\r\n  const renderPostBody = () => {\r\n    if (props.post) {\r\n      return (\r\n        <>\r\n          <Card type=\"inner\" title={props.post.title}>\r\n            <p>{props.post.post_body}</p>\r\n          </Card>\r\n          <PostComments postId={props.post.post_id} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderSolutions = () => {\r\n    if (props.post) {\r\n      return (\r\n        <SolutionList postId={props.post.post_id} domain={props.post.domain} />\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!props.post) return <div>Loading...</div>;\r\n  if (props.post.post_type === \"DISCUSSION\") {\r\n    return (\r\n      <Row>\r\n        <Col span={14} style={{ padding: \"5px\" }}>\r\n          {renderPostBody()}\r\n        </Col>\r\n        <Col span={6} style={{ padding: \"5px\" }}>\r\n          <DomainBlurb />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  } else if (props.post.post_type === \"ISSUE\") {\r\n    return (\r\n      <Row>\r\n        <Col span={14} style={{ padding: \"5px\" }}>\r\n          {renderPostBody()}\r\n        </Col>\r\n        <Col span={8} style={{ padding: \"5px\" }}>\r\n          {renderSolutions()}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { post: state.posts[ownProps.match.params.postId] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPost })(PostShow);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostFeed.js",["266"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List, Button, Row, Col, Menu, Dropdown, Radio } from \"antd\";\r\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\r\n\r\nimport { fetchPosts } from \"../../actions\";\r\nimport PostFeedItem from \"./PostFeedItem\";\r\n\r\nconst PostFeed = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPosts();\r\n  }, []);\r\n  const [sort, setSort] = useState(\"Trending\");\r\n\r\n  const handleMenuClick = (e) => {\r\n    setSort(e.key);\r\n  };\r\n\r\n  const renderList = () => {\r\n    return (\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={props.posts}\r\n        bordered\r\n        pagination={{\r\n          pageSize: 10,\r\n        }}\r\n        renderItem={(post) => <PostFeedItem post={post} />}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={12}>\r\n          <div>\r\n            <Dropdown\r\n              overlay={\r\n                <Menu onClick={handleMenuClick}>\r\n                  <Menu.Item key=\"Trending\" icon={<UserOutlined />}>\r\n                    Trending\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"Top\" icon={<UserOutlined />}>\r\n                    Top\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"New\" icon={<UserOutlined />}>\r\n                    New\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n            >\r\n              <Button>\r\n                {sort} <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n          </div>\r\n        </Col>\r\n        <Col span={12}>\r\n          <div style={{ float: \"right\" }}>\r\n            <Radio.Group defaultValue=\"ALL\" name=\"postType\" buttonStyle=\"solid\">\r\n              <Radio.Button value=\"ALL\">All</Radio.Button>\r\n              <Radio.Button value=\"DISCUSSION\">Discussions</Radio.Button>\r\n              <Radio.Button value=\"ISSUE\">Issues</Radio.Button>\r\n            </Radio.Group>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div>{renderList()}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  if (!ownProps.domainName) {\r\n    return {\r\n      posts: Object.values(state.posts),\r\n    };\r\n  } else {\r\n    return {\r\n      posts: Object.values(state.posts).filter(\r\n        (post) => post.domain === ownProps.domainName\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(PostFeed);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\RecentPosts.js",["267"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List } from \"antd\";\r\nimport TimeAgo from \"timeago-react\";\r\n\r\nimport { fetchLatestPosts } from \"../../actions\";\r\n\r\nconst RecentPosts = (props) => {\r\n  useEffect(() => {\r\n    props.fetchLatestPosts(10);\r\n  }, []);\r\n\r\n  const formatText = (title, created_at) => {\r\n    return (\r\n      <>\r\n        {title} <TimeAgo datetime={created_at} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (!props.posts) {\r\n    return <div>No posts</div>;\r\n  }\r\n  return (\r\n    <List\r\n      size=\"small\"\r\n      header={<strong>Recent Posts</strong>}\r\n      itemLayout=\"horizontal\"\r\n      dataSource={props.posts}\r\n      bordered\r\n      renderItem={(post) => (\r\n        <Link to={`/d/${post.domain}/posts/${post.post_id}`}>\r\n          <List.Item>{formatText(post.title, post.created_at)}</List.Item>\r\n        </Link>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: Object.values(state.posts),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchLatestPosts })(RecentPosts);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostCreate.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\Login.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\Register.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainCreate.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\postReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\types.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\index.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\apis\\api.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\domainReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainEdit.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\Header.js",["268"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { signIn, register, signOut } from \"../../actions\";\r\n\r\nconst Header = (props) => {\r\n  const renderAuth = () => {\r\n    if (!props.isSignedIn) {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Link to=\"/login\" style={{ color: \"white\", padding: \"12px\" }}>\r\n            Login\r\n          </Link>\r\n          <Link to=\"/register\" style={{ color: \"white\", padding: \"12px\" }}>\r\n            Register\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Link\r\n            style={{ color: \"white\", padding: \"12px\" }}\r\n            to={`/user/${props.userId}`}\r\n          >\r\n            Hello {props.userName}\r\n          </Link>\r\n          <a\r\n            onClick={() => {\r\n              props.signOut();\r\n            }}\r\n            style={{ color: \"white\", padding: \"12px\" }}\r\n          >\r\n            Logout\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout.Header\r\n      style={{\r\n        position: \"fixed\",\r\n        zIndex: 9001,\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Link to=\"/\">\r\n        <h1\r\n          style={{\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          Widepoll\r\n        </h1>\r\n      </Link>\r\n      {renderAuth()}\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.auth.user_name,\r\n    userId: state.auth.user_id,\r\n    isSignedIn: state.auth.isSignedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, register, signOut })(Header);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\layout\\SideMenu.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Home.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainHome.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainBlurb.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Settings.js",["269","270"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button } from \"antd\";\r\n\r\nimport { becomeRep } from \"../../actions\";\r\n\r\nconst Settings = (props) => {\r\n  const renderRep = () => {\r\n    if (props.isSignedIn && !props.isRep) {\r\n      return (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          onClick={() => {\r\n            props.becomeRep();\r\n          }}\r\n        >\r\n          Become a representative\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Settings</h1>\r\n      {/* <Card>{renderRep()}</Card> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn,\r\n    isRep: state.auth.isRep,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { becomeRep })(Settings);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\Search.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollCreate.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\Comment.js",["271","272","273","274","275","276"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Comment as AntComment, Avatar, Tooltip, Space } from \"antd\";\r\nimport { LikeOutlined, LikeFilled } from \"@ant-design/icons\";\r\nimport CommentCreate from \"./CommentCreate\";\r\nimport { likeComment, unlikeComment, createSentiment } from \"../../actions\";\r\nimport SentimentEditor from \"../app/SentimentEditor\";\r\n\r\nimport _ from \"lodash\";\r\nimport TimeAgo from \"timeago-react\";\r\n\r\nconst MyComment = (props) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [reply, setReply] = useState(false);\r\n  const [showSubmitSentiment, setShowSubmitSentiment] = useState(false);\r\n  const [sentiment, setSentiment] = useState();\r\n\r\n  const onSentimentChange = (changed, sentiment) => {\r\n    setShowSubmitSentiment(changed);\r\n    setSentiment(sentiment);\r\n  };\r\n\r\n  const like = () => {\r\n    if (!liked) {\r\n      setLiked(true);\r\n      props.likeComment(props.comment.comment_id, props.postId);\r\n    } else {\r\n      setLiked(false);\r\n      props.unlikeComment(props.comment.comment_id, props.postId);\r\n    }\r\n  };\r\n\r\n  const showReply = () => {\r\n    if (reply)\r\n      return (\r\n        <CommentCreate\r\n          postId={props.postId}\r\n          commentType=\"REPLY\"\r\n          parentId={props.comment.comment_id}\r\n        />\r\n      );\r\n  };\r\n\r\n  const renderChildren = () => {\r\n    if (props.children) {\r\n      return Object.entries(props.children).map(([key, value]) => {\r\n        return (\r\n          <Comment\r\n            postId={props.postId}\r\n            comment={value}\r\n            key={key}\r\n            sentimentView={props.sentimentView ? true : undefined}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    <Space>\r\n      <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n        <span onClick={like}>\r\n          {liked ? <LikeFilled /> : <LikeOutlined />}\r\n          <span className=\"comment-action\">{props.likes}</span>\r\n        </span>\r\n      </Tooltip>\r\n      <TimeAgo key=\"comment-created-at\" datetime={props.comment.created_at} />\r\n      <a\r\n        onClick={() => {\r\n          setReply(!reply);\r\n        }}\r\n      >\r\n        Reply to\r\n      </a>\r\n      {showSubmitSentiment ? (\r\n        <a\r\n          onClick={() => {\r\n            props.createSentiment(\r\n              props.comment.post_id,\r\n              props.comment.comment_id,\r\n              sentiment\r\n            );\r\n          }}\r\n        >\r\n          Submit sentiment\r\n        </a>\r\n      ) : null}\r\n    </Space>,\r\n  ];\r\n\r\n  const interpolateColours = (colour1, colour2, ratio) => {\r\n    const toHex = (colour) => {\r\n      const colourString = colour.toString(16);\r\n      return colourString.length === 1 ? `0${colourString}` : colourString;\r\n    };\r\n\r\n    let r = Math.ceil(\r\n      parseInt(colour2.substring(0, 2), 16) * ratio +\r\n        parseInt(colour1.substring(0, 2), 16) * (1 - ratio)\r\n    );\r\n    let g = Math.ceil(\r\n      parseInt(colour2.substring(2, 4), 16) * ratio +\r\n        parseInt(colour1.substring(2, 4), 16) * (1 - ratio)\r\n    );\r\n    let b = Math.ceil(\r\n      parseInt(colour2.substring(4, 6), 16) * ratio +\r\n        parseInt(colour1.substring(4, 6), 16) * (1 - ratio)\r\n    );\r\n\r\n    return toHex(r) + toHex(g) + toHex(b);\r\n  };\r\n\r\n  const stackSentiments = (sentiments) => {\r\n    const stack = props.comment.comment_body.split(\"\").map((char) => {\r\n      return { char: char, agree: 0, disagree: 0, bias: 0 };\r\n    });\r\n\r\n    if (sentiments[0]) {\r\n      sentiments.forEach((element) => {\r\n        let userSentiment = element[0].children;\r\n        let index = 0;\r\n        userSentiment.forEach((section) => {\r\n          let agree = !!section.highlightAgree;\r\n          let disagree = !!section.highlightDisagree;\r\n          let bias = !!section.highlightBias;\r\n\r\n          let sectionLength = section.text.length;\r\n\r\n          var i;\r\n          for (i = index; i < index + sectionLength; i++) {\r\n            if (agree) {\r\n              stack[i].agree++;\r\n            } else if (disagree) {\r\n              stack[i].disagree++;\r\n            } else if (bias) {\r\n              stack[i].bias++;\r\n            }\r\n          }\r\n          index += sectionLength;\r\n        });\r\n      });\r\n    }\r\n\r\n    return stack;\r\n  };\r\n\r\n  const formatSentiment = () => {\r\n    if (!props.sentiments) {\r\n      return props.comment.comment_body;\r\n    } else {\r\n      const stackedSentiments = stackSentiments(props.sentiments);\r\n      const sentimentCount = props.sentiments.length;\r\n\r\n      return stackedSentiments.map((char, index) => {\r\n        let diff = char.agree - char.disagree;\r\n        let underline = char.bias > 0 ? \"2px solid #FF9C15\" : \"\";\r\n        let highlight = \"transparent\";\r\n        let tooltipText = `Agree: ${char.agree} Disagree: ${char.disagree} Bias: ${char.bias}`;\r\n\r\n        // min red, max red etc\r\n        let green = \"#549E37\";\r\n        let grey = \"#A7AFB6\";\r\n        let red = \"#BA4D36\";\r\n\r\n        if (diff === 0 && char.agree > 0) {\r\n          highlight = grey;\r\n        } else if (diff > 0) {\r\n          highlight = green;\r\n          // highlight = interpolateColours(\r\n          //   grey,\r\n          //   green,\r\n          //   char.agree / sentimentCount\r\n          // );\r\n        } else if (diff < 0) {\r\n          highlight = red;\r\n          // highlight = interpolateColours(\r\n          //   red,\r\n          //   grey,\r\n          //   char.disagree / sentimentCount\r\n          // );\r\n        }\r\n\r\n        return (\r\n          <Tooltip key={index} title={tooltipText}>\r\n            <mark\r\n              style={{\r\n                backgroundColor: highlight,\r\n                padding: \"0 0\",\r\n                borderBottom: underline,\r\n              }}\r\n            >\r\n              {char.char}\r\n            </mark>\r\n          </Tooltip>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  if (props.likes !== null) {\r\n    if (!props.sentimentView) {\r\n      return (\r\n        <AntComment\r\n          actions={actions}\r\n          author={<a>#{props.comment.comment_id}</a>}\r\n          avatar={\r\n            <Avatar\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n              alt=\"Han Solo\"\r\n            />\r\n          }\r\n          content={\r\n            <SentimentEditor\r\n              textValue={props.comment.comment_body}\r\n              onSentimentChange={onSentimentChange}\r\n            />\r\n          }\r\n        >\r\n          {showReply()}\r\n          {renderChildren()}\r\n        </AntComment>\r\n      );\r\n    } else {\r\n      return (\r\n        <AntComment\r\n          actions={[\r\n            <Space>\r\n              <TimeAgo\r\n                key=\"comment-created-at\"\r\n                datetime={props.comment.created_at}\r\n              />\r\n            </Space>,\r\n          ]}\r\n          author={<a>#{props.comment.comment_id}</a>}\r\n          avatar={\r\n            <Avatar\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n              alt=\"Han Solo\"\r\n            />\r\n          }\r\n          content={formatSentiment()}\r\n        >\r\n          {renderChildren()}\r\n        </AntComment>\r\n      );\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    userId: state.auth.user_id,\r\n    likes:\r\n      state.comments[ownProps.comment.post_id][ownProps.comment.comment_id]\r\n        .likes,\r\n    children: _.pickBy(state.comments[ownProps.comment.post_id], (value) => {\r\n      return _.includes(ownProps.comment.children, value.comment_id);\r\n    }),\r\n    sentiments:\r\n      ownProps.sentimentView &&\r\n      state.sentiments[ownProps.comment.post_id][ownProps.comment.comment_id]\r\n        ? state.sentiments[ownProps.comment.post_id][\r\n            ownProps.comment.comment_id\r\n          ]\r\n        : undefined,\r\n  };\r\n};\r\n\r\nconst Comment = connect(mapStateToProps, {\r\n  likeComment,\r\n  unlikeComment,\r\n  createSentiment,\r\n})(MyComment);\r\n\r\nexport default Comment;\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostComments.js",["277"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Comment from \"./Comment\";\r\nimport { Card, Tabs } from \"antd\";\r\nimport { fetchComments, fetchSentiments } from \"../../actions\";\r\n\r\nimport _ from \"lodash\";\r\nimport CommentCreate from \"./CommentCreate\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst PostComments = (props) => {\r\n  useEffect(() => {\r\n    props.fetchComments(props.postId);\r\n    props.fetchSentiments(props.postId);\r\n  }, []);\r\n\r\n  const renderComments = () => {\r\n    if (props.comments) {\r\n      return Object.entries(props.comments).map(([key, value]) => {\r\n        return <Comment postId={props.postId} comment={value} key={key} />;\r\n      });\r\n    }\r\n    return <h6>There are no comments for this post. Be the first one!</h6>;\r\n  };\r\n\r\n  const renderSentiments = () => {\r\n    if (props.comments && props.hasSentiments) {\r\n      return Object.entries(props.comments).map(([key, value]) => {\r\n        return (\r\n          <Comment\r\n            postId={props.postId}\r\n            comment={value}\r\n            key={key}\r\n            sentimentView\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <h6>\r\n        There are no sentiments for this post. Click the comments tab and add a\r\n        sentiment to be the first one!\r\n      </h6>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card style={{ marginTop: \"5px\" }}>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Comments\" key=\"1\">\r\n          <CommentCreate postId={props.postId} commentType=\"ROOT\" />\r\n          {renderComments()}\r\n        </TabPane>\r\n        <TabPane tab=\"Sentiments\" disabled={!props.hasSentiments} key=\"2\">\r\n          {renderSentiments()}\r\n        </TabPane>\r\n      </Tabs>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    comments: _.pickBy(state.comments[ownProps.postId], (value) => {\r\n      return value.comment_type === \"ROOT\";\r\n    }),\r\n    hasSentiments: state.sentiments[ownProps.postId] ? true : false,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchComments, fetchSentiments })(\r\n  PostComments\r\n);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\CommentCreate.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\authActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\commentActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\domainActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\solutionActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\postActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\commentReducer.js",["278"],"import produce from \"immer\";\r\nimport {\r\n  CREATE_COMMENT,\r\n  FETCH_COMMENTS,\r\n  LIKE_COMMENT,\r\n  UNLIKE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst assignChildren = (comments) => {\r\n  for (let [key, comment] of Object.entries(comments)) {\r\n    const parent = comments[comment.parent_id];\r\n    if (parent) {\r\n      if (comment.comment_type === \"REPLY\") {\r\n        parent.children.push(comment.comment_id);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default produce((draft, action = {}) => {\r\n  if (!action.payload) {\r\n    return;\r\n  }\r\n  switch (action.type) {\r\n    case CREATE_COMMENT:\r\n      if (!draft[action.payload.post_id]) {\r\n        draft[action.payload.post_id] = {};\r\n      }\r\n      draft[action.payload.post_id][action.payload.comment_id] = action.payload;\r\n      draft[action.payload.post_id][action.payload.comment_id].children = [];\r\n      if (action.payload.comment_type === \"REPLY\") {\r\n        draft[action.payload.post_id][action.payload.parent_id].children.push(\r\n          action.payload.comment_id\r\n        );\r\n      }\r\n      return;\r\n    case FETCH_COMMENTS:\r\n      if (!action.payload[0]) {\r\n        return;\r\n      }\r\n      const postId = action.payload[0].post_id;\r\n      if (!draft[postId]) {\r\n        draft[postId] = {};\r\n      }\r\n      action.payload.forEach((comment) => {\r\n        draft[postId][comment.comment_id] = comment;\r\n        draft[postId][comment.comment_id].children = [];\r\n      });\r\n      assignChildren(draft[postId]);\r\n      return;\r\n    case LIKE_COMMENT:\r\n      draft[action.payload.postId][action.payload.commentId].likes =\r\n        action.payload.likes;\r\n      return;\r\n    case UNLIKE_COMMENT:\r\n      draft[action.payload.postId][action.payload.commentId].likes =\r\n        action.payload.likes;\r\n      return;\r\n    default:\r\n      return;\r\n  }\r\n}, {});\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\solutionReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionList.js",["279"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Button } from \"antd\";\r\n\r\nimport SolutionListItem from \"./SolutionListItem\";\r\n\r\nimport { fetchSolutions } from \"../../actions\";\r\n\r\nconst SolutionList = (props) => {\r\n  useEffect(() => {\r\n    props.fetchSolutions(props.postId);\r\n  }, []);\r\n\r\n  // Use above until fix async likes fetch\r\n  // useEffect(() => {\r\n  //   props.fetchSolutions(props.postId);\r\n  // },[]);\r\n\r\n  const renderCreate = () => {\r\n    if (props.isSignedIn) {\r\n      return (\r\n        <Link to={`/d/${props.domain}/posts/${props.postId}/solutions/new`}>\r\n          <Button>Create a Solution</Button>\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderList = () => {\r\n    return (\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={props.solutions}\r\n        bordered\r\n        pagination={{\r\n          pageSize: 10,\r\n        }}\r\n        renderItem={(solution) => (\r\n          <SolutionListItem solution={solution} key={solution.solution_id} />\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderCreate()}\r\n      {renderList()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const newProps = { isSignedIn: state.auth.isSignedIn };\r\n  if (state.solutions[ownProps.postId])\r\n    newProps.solutions = Object.values(state.solutions[ownProps.postId]);\r\n  return newProps;\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSolutions })(SolutionList);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionListItem.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\solutions\\SolutionCreate.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\posts\\PostFeedItem.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\pollActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollShow.js",["280"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Radio } from \"antd\";\r\n\r\nimport { fetchPoll, votePoll } from \"../../actions\";\r\n\r\nconst PollShow = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPoll(props.match.params.pollId);\r\n  }, []);\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const renderOptions = () => {\r\n    return props.poll.options.map((option) => {\r\n      return (\r\n        <Radio\r\n          style={{\r\n            display: \"block\",\r\n            height: \"30px\",\r\n            lineHeight: \"30px\",\r\n          }}\r\n          value={option.option_id}\r\n        >\r\n          {option.body}\r\n        </Radio>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (props.poll) {\r\n    return (\r\n      <>\r\n        <h1>{props.poll.title}</h1>\r\n        <Radio.Group\r\n          onChange={(e) => {\r\n            setSelectedOption(e.target.value);\r\n          }}\r\n          value={selectedOption}\r\n        >\r\n          {renderOptions()}\r\n        </Radio.Group>\r\n        <br />\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          onClick={() => {\r\n            props.votePoll(selectedOption, props.poll.poll_id);\r\n          }}\r\n        >\r\n          Submit answer\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { poll: state.polls[ownProps.match.params.pollId] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPoll, votePoll })(PollShow);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\pollReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\polls\\PollResults.js",["281"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPoll } from \"../../actions\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nconst PollResults = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPoll(props.match.params.pollId);\r\n  }, []);\r\n\r\n  if (props.poll) {\r\n    return (\r\n      <Pie\r\n        data={{\r\n          labels: props.poll.options.map((option) => option.body),\r\n          datasets: [\r\n            {\r\n              label: \"Votes\",\r\n              data: props.poll.options.map((option) => option.votes),\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n              ],\r\n              borderColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(75, 192, 192, 1)\",\r\n                \"rgba(153, 102, 255, 1)\",\r\n                \"rgba(255, 159, 64, 1)\",\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: props.poll.title,\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { poll: state.polls[ownProps.match.params.pollId] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPoll })(PollResults);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\app\\SentimentEditor.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\domains\\DomainList.js",["282"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Space } from \"antd\";\r\nimport { fetchDomains } from \"../../actions\";\r\n\r\nconst DomainList = (props) => {\r\n  useEffect(() => {\r\n    props.fetchDomains();\r\n  }, []);\r\n\r\n  const renderDomains = () => {\r\n    if (props.domains) {\r\n      return Object.entries(props.domains).map(([key, value]) => {\r\n        return (\r\n          <Link key={key} to={`/d/${value.domain_name}`}>\r\n            {`/d/${value.domain_name}`}\r\n          </Link>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card type=\"inner\" title=\"Domains\">\r\n      <Space direction=\"vertical\">{renderDomains()}</Space>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { domains: state.domains };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchDomains })(DomainList);\r\n","C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\sentimentReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\RepCard.js",["283"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\ProfileFeed.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\ProfileBio.js",["284"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\Following.js",["285"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\PendingVotes.js",["286"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\RecentActivity.js",["287","288"],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\actions\\voteActions.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\reducers\\pendingVotesReducer.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\DomainRepresentedItem.js",[],"C:\\Users\\MS\\Projects\\widepoll\\client\\src\\components\\accounts\\UserProfile\\PendingVoteItem.js",["289"],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":13,"column":6,"nodeType":"296","endLine":13,"endColumn":8,"suggestions":"297"},{"ruleId":"294","severity":1,"message":"295","line":12,"column":6,"nodeType":"296","endLine":12,"endColumn":8,"suggestions":"298"},{"ruleId":"294","severity":1,"message":"295","line":12,"column":6,"nodeType":"296","endLine":12,"endColumn":8,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":40,"column":11,"nodeType":"302","endLine":45,"endColumn":12},{"ruleId":"303","severity":1,"message":"304","line":3,"column":10,"nodeType":"305","messageId":"306","endLine":3,"endColumn":14},{"ruleId":"303","severity":1,"message":"307","line":8,"column":9,"nodeType":"305","messageId":"306","endLine":8,"endColumn":18},{"ruleId":"300","severity":1,"message":"301","line":68,"column":7,"nodeType":"302","endLine":72,"endColumn":8},{"ruleId":"300","severity":1,"message":"301","line":76,"column":9,"nodeType":"302","endLine":84,"endColumn":10},{"ruleId":"303","severity":1,"message":"308","line":91,"column":9,"nodeType":"305","messageId":"306","endLine":91,"endColumn":27},{"ruleId":"303","severity":1,"message":"309","line":152,"column":13,"nodeType":"305","messageId":"306","endLine":152,"endColumn":27},{"ruleId":"300","severity":1,"message":"301","line":205,"column":19,"nodeType":"302","endLine":205,"endColumn":22},{"ruleId":"300","severity":1,"message":"301","line":234,"column":19,"nodeType":"302","endLine":234,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":16,"column":6,"nodeType":"296","endLine":16,"endColumn":8,"suggestions":"310"},{"ruleId":"303","severity":1,"message":"311","line":10,"column":13,"nodeType":"305","messageId":"306","endLine":10,"endColumn":16},{"ruleId":"294","severity":1,"message":"295","line":13,"column":6,"nodeType":"296","endLine":13,"endColumn":8,"suggestions":"312"},{"ruleId":"294","severity":1,"message":"295","line":10,"column":6,"nodeType":"296","endLine":10,"endColumn":8,"suggestions":"313"},{"ruleId":"294","severity":1,"message":"295","line":9,"column":6,"nodeType":"296","endLine":9,"endColumn":8,"suggestions":"314"},{"ruleId":"294","severity":1,"message":"295","line":10,"column":6,"nodeType":"296","endLine":10,"endColumn":8,"suggestions":"315"},{"ruleId":"294","severity":1,"message":"295","line":12,"column":6,"nodeType":"296","endLine":12,"endColumn":8,"suggestions":"316"},{"ruleId":"294","severity":1,"message":"317","line":12,"column":6,"nodeType":"296","endLine":12,"endColumn":8,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"295","line":16,"column":6,"nodeType":"296","endLine":16,"endColumn":8,"suggestions":"319"},{"ruleId":"294","severity":1,"message":"295","line":10,"column":6,"nodeType":"296","endLine":10,"endColumn":8,"suggestions":"320"},{"ruleId":"303","severity":1,"message":"321","line":2,"column":10,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"294","severity":1,"message":"322","line":16,"column":6,"nodeType":"296","endLine":16,"endColumn":8,"suggestions":"323"},{"ruleId":"294","severity":1,"message":"324","line":34,"column":6,"nodeType":"296","endLine":34,"endColumn":8,"suggestions":"325"},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["328"],["329"],["330"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'renderRep' is assigned a value but never used.","'interpolateColours' is assigned a value but never used.","'sentimentCount' is assigned a value but never used.",["331"],"'key' is assigned a value but never used.",["332"],["333"],["334"],["335"],["336"],"React Hook useEffect has missing dependencies: 'fetchUser' and 'userId'. Either include them or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["337"],["338"],["339"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has missing dependencies: 'fetchUser', 'vote.entity', 'vote.entity_id', and 'vote.rep_id'. Either include them or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["341"],"no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"342","fix":"344"},{"desc":"342","fix":"345"},{"desc":"342","fix":"346"},{"desc":"342","fix":"347"},{"desc":"342","fix":"348"},{"desc":"342","fix":"349"},{"desc":"342","fix":"350"},{"desc":"342","fix":"351"},{"desc":"352","fix":"353"},{"desc":"342","fix":"354"},{"desc":"342","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},"Update the dependencies array to be: [props]",{"range":"360","text":"361"},{"range":"362","text":"361"},{"range":"363","text":"361"},{"range":"364","text":"361"},{"range":"365","text":"361"},{"range":"366","text":"361"},{"range":"367","text":"361"},{"range":"368","text":"361"},{"range":"369","text":"361"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"370","text":"371"},{"range":"372","text":"361"},{"range":"373","text":"361"},"Update the dependencies array to be: [userId]",{"range":"374","text":"375"},"Update the dependencies array to be: [fetchUser, vote.entity, vote.entity_id, vote.rep_id]",{"range":"376","text":"377"},[427,429],"[props]",[404,406],[341,343],[465,467],[372,374],[296,298],[278,280],[297,299],[381,383],[383,385],"[fetchUser, userId]",[522,524],[285,287],[532,534],"[userId]",[983,985],"[fetchUser, vote.entity, vote.entity_id, vote.rep_id]"]